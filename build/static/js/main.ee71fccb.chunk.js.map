{"version":3,"sources":["components/Navbar.js","components/Filters.js","components/Patient.js","components/Pagination.js","utilities/filterRecords.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","AppFilters","filterCri","updateFilCri","filters","updateFilterText","updateSearch","filterQuery","searchText","onSubmit","e","preventDefault","value","onChange","target","id","type","handleFilterTextChange","placeholder","handleSearchTextChange","Patient","isLoading","records","length","map","record","MacAddress","data-toggle","data-target","UserName","aria-expanded","aria-controls","FirstName","LastName","style","float","data-placement","title","aria-labelledby","data-parent","Gender","Email","DomainName","PhoneNumber","URL","LastLogin","PaymentMethod","Latitude","Longitude","Pagination","recordsPerPage","totalRecords","paginate","pageNumbers","i","Math","ceil","push","aria-label","number","onClick","hanleOnClick","href","filterRecords","filter","isFilterMatch","toLowerCase","isSearchMatch","includes","App","useState","setRecords","setIsLoading","currentPage","setCurrentPage","updateFilter","useEffect","getRecords","indexOfLastRecord","indexOfFirstRecords","currentRecords","slice","a","axios","request","method","url","proxy","recordsData","data","profiles","alert","console","log","Filters","text","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee71fccb.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Navbar = () => {\r\n    return <>\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n    <div className=\"container\">\r\n    <span className=\"navbar-brand mb-0 h1\">Find a Record</span>\r\n    </div>\r\n</nav>\r\n    </>\r\n}\r\n\r\nexport default Navbar","import React from \"react\"\r\n\r\nconst AppFilters = ({ filterCri, updateFilCri, filters, updateFilterText, updateSearch }) => {\r\n    const { filterQuery, searchText } = filters\r\n\r\n    const handleDropDownChange = (e) => {\r\n        updateFilCri(e.target.value)\r\n    }\r\n\r\n    const handleFilterTextChange = (e) => {\r\n        updateFilterText(e.target.value)\r\n    }\r\n\r\n    const handleSearchTextChange = (e) => {\r\n        updateSearch(e.target.value)\r\n    }\r\n\r\n    return <>\r\n        <div className=\"filters-section\">\r\n            <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-7\"> \r\n                <div className=\"dropdown-section\"> \r\n                    <div className=\"dropdown-container\">\r\n            <form className=\"form-inline\" onSubmit={e => { e.preventDefault()}}>\r\n            <label className=\"my-1 mr-2\">Filter By:</label>\r\n        <select value={filterCri} className=\"custom-select my-1 mr-sm-2\"\r\n         onChange={handleDropDownChange} \r\n        id=\"inlineFormCustomSelectPref\">\r\n            <option value=\"\">Select A Query Criteria</option>\r\n            <option value=\"Gender\">Gender</option>\r\n            <option value=\"PaymentMethod\">Payment Method</option>\r\n        </select>\r\n\r\n            <label className=\"sr-only\">Filter Text</label>\r\n                <input type=\"text\" value={filterQuery} onChange={e => handleFilterTextChange(e)} className=\"form-control\" placeholder=\"Filter text. e.g Female, Visa, Mastercard\" />\r\n            </form>\r\n        </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-sm-5\">\r\n                <div className=\"searchname-section\">\r\n                <h5>Search Patient By Firstname</h5>\r\n                <input type=\"text\" value={searchText} onChange={e => handleSearchTextChange(e)} className=\"form-control mb-2 mr-sm-2\" placeholder=\"Search User By FirstName\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default AppFilters","import React from \"react\"\r\n\r\nconst Patient = ({ isLoading, records }) => {\r\n\r\n    if(isLoading){\r\n        return <><div className=\"container\"><p className=\"lead mt-4 mb-4 text-center\">Loading...</p></div> </>\r\n    }\r\n\r\n    if(records.length === 0){\r\n        return <><div className=\"container\"><p className=\"lead mt-4 mb-4 text-center\">No Record Found</p></div> </>\r\n    }\r\n\r\n    return <>\r\n   <div className=\"container mt-4 mb-5\">\r\n    <div className=\"accordion\" id=\"recordsAccordion\">\r\n        {\r\n         records.map((record) => <>\r\n    <div key={record.UserName} className=\"card\">\r\n    <div className=\"card-header\" id={`${record.MacAddress}`}>\r\n      <h2 className=\"mb-0\">\r\n        <button className=\"btn btn-block text-left patient-heading\" type=\"button\" data-toggle=\"collapse\" data-target={`#${record.UserName}`} aria-expanded=\"false\" aria-controls={`${record.UserName}`}>\r\n          {`${record.FirstName} ${record.LastName}`}  <div style={{float:\"right\"}} type=\"button\" className=\"btn btn-default\" data-toggle=\"tooltip\" data-placement=\"top\" title={`Click here for more info about ${record.FirstName}`}>\r\n                ...\r\n            </div>\r\n        </button>\r\n      </h2>\r\n    </div>\r\n    <div id={`${record.UserName}`} className=\"collapse\" aria-labelledby={`${record.MacAddress}`} data-parent=\"#recordsAccordion\">\r\n      <div className=\"card-body\">\r\n            <p className=\"individual-patient\">Gender: <span>{record.Gender}</span></p>\r\n            <p className=\"individual-patient\">Email: <span>{record.Email}</span></p>\r\n            <p className=\"individual-patient\">Domain Name: <span>{record.DomainName}</span></p>\r\n            <p className=\"individual-patient\">Phone Number: <span>{record.PhoneNumber}</span></p>\r\n            <p className=\"individual-patient\">Mac Address: <span>{record.MacAddress}</span></p>\r\n            <p className=\"individual-patient\">URL: <span>{record.URL}</span></p>\r\n            <p className=\"individual-patient\">Username: <span>{record.UserName}</span></p>\r\n            <p className=\"individual-patient\">Last Seen: <span>{record.LastLogin}</span></p>\r\n            <p className=\"individual-patient\">Payment Method: <span>{record.PaymentMethod}</span></p>\r\n            <p className=\"individual-patient\">Location: <span> Latitude:{\" \"}{`\"${record.Latitude}\"`} Longitude:{\" \"}{`\"${record.Longitude}\"`}</span></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n            </>)\r\n        }\r\n    </div>\r\n</div>\r\n    </>\r\n}\r\n\r\nexport default Patient\r\n\r\n","import React from \"react\"\r\n\r\nconst Pagination = ({ recordsPerPage, totalRecords, paginate }) => {\r\n    const pageNumbers = []\r\n\r\n    for(let i = 1; i <= Math.ceil(totalRecords / recordsPerPage); i++){\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    const hanleOnClick = (e, number) => {\r\n        e.preventDefault()\r\n        paginate(number)\r\n    }\r\n\r\n    return (\r\n<div className=\"container\">\r\n <nav className=\"mb-5\" aria-label=\"Page navigation\">\r\n  <ul className=\"pagination\">\r\n        {\r\n            pageNumbers.map((number) => (\r\n                <li key={number} className=\"page-item\"><a className=\"page-link\" onClick={(e) => hanleOnClick(e, number)} href=\"!#\">{number}</a></li>\r\n            ))\r\n        }\r\n  </ul>\r\n  </nav>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","\r\n\r\nconst filterRecords = (records, filters, filterCri) => {\r\n    const { filterQuery, searchText } = filters \r\n\r\n    const filteredData = records.filter((record) => {\r\n        let isFilterMatch = true\r\n\r\n    if(filterCri !== \"\"){\r\n       isFilterMatch = record[filterCri].toLowerCase() === filterQuery.toLowerCase()\r\n       } else {\r\n           return isFilterMatch\r\n       }\r\n\r\n     return isFilterMatch\r\n\r\n    }).filter((record) => {\r\n        \r\n        let isSearchMatch = true\r\n\r\n        if(searchText !== \"\"){\r\n            isSearchMatch = record.FirstName.toLowerCase().includes(searchText.toLowerCase())\r\n        } else {\r\n            return isSearchMatch\r\n        }\r\n\r\n        return isSearchMatch\r\n\r\n    })\r\n\r\n    return filteredData\r\n}\r\n\r\nexport default filterRecords","import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport './App.css';\nimport Navbar from \"./components/Navbar\"\nimport Filters from \"./components/Filters\"\nimport Patient from \"./components/Patient\"\nimport Pagination from \"./components/Pagination\"\n\nimport filterRecords from \"./utilities/filterRecords\"\n\nfunction App() {\n\n  const [ records, setRecords ] = useState([])\n  const [ isLoading, setIsLoading ] = useState(false)\n  const [ currentPage, setCurrentPage ] = useState(1)\n  const [ recordsPerPage ] = useState(20)\n  const [ filterCri, updateFilCri  ] = useState('')\n  const [ filters, updateFilter] = useState({\n    filterQuery:'',\n    searchText:''\n  })\n\n  const updateFilterText = (text) => {\n      updateFilter({\n        ...filters,\n        filterQuery: text\n      })\n  }\n\n  const updateSearch = (text) => {\n    updateFilter({\n      ...filters,\n      searchText: text\n    })\n  }\n\n  useEffect(() => {\n    getRecords()\n  }, [])\n  \n  // Get Current records\n  const indexOfLastRecord = currentPage * recordsPerPage\n  const indexOfFirstRecords = indexOfLastRecord - recordsPerPage\n  const currentRecords = filterRecords(records, filters, filterCri ).slice(indexOfFirstRecords, indexOfLastRecord)\n\n  // Change Page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n  const getRecords = async () => {\n    try {\n      setIsLoading(true)\n      const apiUrl = 'http://api.enye.tech/v1/challenge/records'\n      const proxy = \"https://cors-anywhere.herokuapp.com/\"\n      const recordsData = await axios.request({\n        method: 'get',\n        url: proxy + apiUrl\n      }) \n      setRecords(recordsData.data.records.profiles)\n      setIsLoading(false)\n    } catch (error) {\n        alert('Cannot Fetch Records At this time.')\n        setIsLoading(false)\n        console.log(error)\n    }\n  }\n\n  return (<>\n  <Navbar />\n  <Filters filterCri={filterCri} updateFilCri={updateFilCri} filters={filters} updateFilterText={updateFilterText} updateSearch={updateSearch} />\n  <Patient isLoading={isLoading} records={currentRecords} />\n  <Pagination recordsPerPage={recordsPerPage} totalRecords={filterRecords(records, filters, filterCri ).length} paginate={paginate} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}